<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>gcpApprovalProcess</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var data = request.body.data;
	var sysId = data.sysId;
	var role = data.role;
	var comments = data.comments;
	var action = data.action;
	
	var gr1 = new GlideRecord("x_naci_gcp_gcp_task");
        gr1.addQuery("sys_id", sysId);
        gr1.query();
        gr1.next();
	    var employeeId = gr1.getDisplayValue('employee_id');
	    var trainingType = gr1.getDisplayValue('certificate_type');
		gr1.comments = '(startAction)' + action + '(endAction)(startComments)' +comments + '(endComments)(role)' + role + '(ENDROLE)' + gs.getUser().getFirstName() + ' ' + gs.getUser().getLastName() + 'ENDCOMMENTS';	
	    gr1.approval_action = action;
	    gr1.comment = comments;
		gr1.update();
	
	//archive all same training for the same person records
	var idList = [];
	var gr2 = new GlideRecord('x_naci_gcp_gcp_task');
	    gr2.addQuery('employee_id', employeeId);
	    gr2.addQuery('certificate_type', trainingType);
	    gr2.addQuery('active', true);
	    gr2.query();
	while(gr2.next()){
		var id = gr2.sys_id.toString();
		if(id != sysId){
			idList.push(id);
		}
	}
	
	for(var i = 0; i < idList.length; i++){
		var gr3 = new GlideRecord('x_naci_gcp_gcp_task');
		    gr3.addQuery('sys_id', idList[i]);
		    gr3.query();
		    gr3.next();
		    gr3.active = false;
		    gr3.update();
	}
	
	return "success";
})(request, response);]]></operation_script>
        <operation_uri>/api/x_naci_gcp/gcprestapi/gcpApprovalProcess</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/gcpApprovalProcess</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>zhoujim@nih.gov</sys_created_by>
        <sys_created_on>2018-08-07 20:06:53</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e8a7c355db7b534054d8ff621f9619f6</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>gcpApprovalProcess</sys_name>
        <sys_package display_value="gcp" source="x_naci_gcp">609215f9dbe35b00b86770c08c9619e2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="gcp">609215f9dbe35b00b86770c08c9619e2</sys_scope>
        <sys_update_name>sys_ws_operation_e8a7c355db7b534054d8ff621f9619f6</sys_update_name>
        <sys_updated_by>zhoujim@nih.gov</sys_updated_by>
        <sys_updated_on>2018-08-10 20:57:51</sys_updated_on>
        <web_service_definition display_value="gcpRestAPI">b36bbd43dba3db0054d8ff621f961968</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
